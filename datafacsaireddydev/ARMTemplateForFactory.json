{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafacsaireddydev"
		},
		"AzureBlobStorage_linkedser_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "blob-connectionstring"
		},
		"AzureKeyVault1linkedser_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "@{linkedService().Azurekey_vault_url}"
		},
		"sql_db_linkedser_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "sql-db-connectionstring"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_dataops')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT *\nFROM parking_sensor_data_table\nWHERE CONVERT(date, Status_Timestamp) = DATEADD(day, -1, CONVERT(date, GETDATE()));",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Lastupdated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Lastupdated",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Status_Timestamp",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Status_Timestamp",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Zone_Number",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Zone_Number",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Status_Description",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Status_Description",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "KerbsideID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "KerbsideID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Location",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Location",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "source_sql_dataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "des_blob_dataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-03-01T07:14:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/source_sql_dataset')]",
				"[concat(variables('factoryId'), '/datasets/des_blob_dataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/des_blob_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_linkedser",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat('sensor_parking_', formatDateTime(addDays(utcNow(), -1), 'yyyy-MM-dd'), '.csv')",
							"type": "Expression"
						},
						"folderPath": "Landing_Directory",
						"container": "dataops-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_linkedser')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_sql_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_db_linkedser",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Lastupdated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status_Timestamp",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Zone_Number",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Status_Description",
						"type": "nvarchar"
					},
					{
						"name": "KerbsideID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Location",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "parking_sensor_data_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_db_linkedser')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage_linkedser')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1linkedser",
							"type": "LinkedServiceReference",
							"parameters": {
								"Azurekey_vault_url": "https://keyvaultsaireddydev.vault.azure.net/"
							}
						},
						"secretName": "[parameters('AzureBlobStorage_linkedser_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1linkedser')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1linkedser')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"Azurekey_vault_url": {
						"type": "string",
						"defaultValue": "https://keyvaultsaireddydev.vault.azure.net/"
					}
				},
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1linkedser_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_db_linkedser')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1linkedser",
							"type": "LinkedServiceReference",
							"parameters": {
								"Azurekey_vault_url": "https://keyvaultsaireddydev.vault.azure.net/"
							}
						},
						"secretName": "[parameters('sql_db_linkedser_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1linkedser')]"
			]
		}
	]
}